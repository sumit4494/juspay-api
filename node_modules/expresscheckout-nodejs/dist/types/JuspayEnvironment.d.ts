import { JuspayConfig, JweAuth } from './types/index.js';
import { JWTKeys } from './security/index.js';
import * as Types from './types/index.js';
export declare class JuspayEnvironment {
    private __api_key?;
    private __merchant_id;
    private __base_url;
    private __timeout;
    private __version;
    private __headers;
    private __jwe_encryption?;
    private __jwe_auth_config?;
    constructor(juspayConfig: JuspayConfig);
    override(overrideConfig?: JuspayConfig): JuspayEnvironment;
    /** Getters and Setters */
    protected setJuspayConfig(juspayConfig: JuspayConfig): void;
    getJuspayConfig(): JuspayConfig;
    getBaseUrl(): string;
    withBaseUrl(base_url: string): JuspayEnvironment;
    getTimeout(): number;
    withTimeout(default_timeout: number): JuspayEnvironment;
    getApiKey(): string | undefined;
    withApiKey(api_key?: string): JuspayEnvironment;
    getMerchantId(): string;
    withMerchantId(merchant_id?: string): JuspayEnvironment;
    withVersion(version: string): JuspayEnvironment;
    getVersion(): string;
    getHeaders(): Types.RequestHeaders;
    getHeadersFromKey(key: string): string | undefined;
    withHeaders(headers: Types.RequestHeaders): JuspayEnvironment;
    withKeyValueHeaders(key: string, value: string): JuspayEnvironment;
    withJweAuthConfig(jwe_auth_config?: JweAuth | undefined): JuspayEnvironment;
    private readJWTKeys;
    /**
     * @returns returns raw keys in string format
     */
    getJweAuthConfig(): JweAuth | undefined;
    /**
     * @returns returns keys are crypto.KeyObject format
     */
    getJweEncryption(): JWTKeys | undefined;
}
