import { BaseResponseHttp, ErrorInfoType } from './types/index.js';
export declare class JuspayError extends Error {
    readonly status?: string;
    readonly status_id?: string;
    readonly error_message?: string;
    readonly error_code?: string;
    readonly error_info?: ErrorInfoType;
    readonly user_message?: string;
    readonly raw?: unknown;
    readonly httpInfo?: BaseResponseHttp;
    /**
     *
     * @param error raw json error response from juspay's api or custom error message, so it's response + message. Default error is Unkown Error
     * @param name name of the error optional, default JuspayError
     * @returns
     */
    constructor(error: unknown, http?: BaseResponseHttp);
    private parseAsObject;
    private parseAsString;
    private snakeToCamel;
}
export declare class APIError extends JuspayError {
    constructor(response: unknown);
}
export declare class TimeoutError extends APIError {
    constructor(message?: string);
}
export declare class AuthenticationError extends APIError {
    constructor(error: unknown);
}
export declare class AuthorizationError extends APIError {
    constructor(error: unknown);
}
export declare class InvalidRequestError extends APIError {
    constructor(error: unknown);
}
export declare class InternalServerError extends APIError {
    constructor(error?: unknown);
}
