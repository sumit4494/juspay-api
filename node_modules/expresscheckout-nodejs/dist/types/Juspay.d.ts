import { JuspayEnvironment } from './JuspayEnvironment.js';
import * as JuspayError from './JuspayError.js';
import { JuspayConfig, IJuspayLogger } from './types/index.js';
import Customer from './resources/Customer.js';
import Order from './resources/Order.js';
import Payments from './resources/Payments.js';
import OrderSession from './resources/OrderSession.js';
/**
 * Juspay's sdk
 */
export declare class Juspay {
    /** Http Request Defaults constants */
    static readonly DEFAULT_REQUEST_TIMEOUT: number;
    static readonly SANDBOX_BASE_URL: string;
    static readonly PRODUCTION_BASE_URL: string;
    static readonly API_VERSION: string;
    static readonly pkg: {
        name: string;
        version: string;
    };
    /** Make this Juspay.silentLogger to disable the logs */
    static customLogger?: IJuspayLogger | ((resource: string) => IJuspayLogger);
    static readonly silentLogger: IJuspayLogger;
    /** exposing errors as static */
    static readonly errors: typeof JuspayError;
    /** Juspay Resources */
    readonly order: Order;
    readonly customer: Customer;
    readonly payments: Payments;
    readonly orderSession: OrderSession;
    readonly juspayEnvironment: JuspayEnvironment;
    constructor(juspayConfig: JuspayConfig);
    static getInstanceFromJuspayEnvironment(juspayEnvironment: JuspayEnvironment): Juspay;
    getJuspayEnvironment(): JuspayEnvironment;
    private static getSdkPackage;
}
export default Juspay;
export * from './JuspayLogger.js';
export * from './JuspayEnvironment.js';
export * from './JuspayError.js';
export * from './types/index.js';
