import { RequestEntity } from './Http.js';
interface BaseCreateOrderRequest extends RequestEntity {
    /**
     * Unique Identifier for the order.
     * Should be Alphanumeric with character length less than 21.
     * Sequential and only numeric characters are not recommended.
     * If the length is more, then there are higher chances of transactions failing.
     * Also, Order ID at Juspay end is not case sensitive.
     * We do not differentiate between upper and lower case values.
     */
    order_id: string;
    /**
     * Amount that the customer has to pay.
     * Will accept double values with upto two decimal places.
     * For example, 100.15 is valid input but 100.1532 is not valid.
     */
    amount: number;
}
export interface CreateOrderRequest extends BaseCreateOrderRequest {
    /**
     * ISO string of the currency. Use INR for Indian Rupee.
     * Among other accepted values are EUR, USD, GBP. Default value: INR
     */
    currency?: string;
    /**
     * String that uniquely identifies the customer.
     * ID returned when you created customer object.
     */
    customer_id?: string;
    /**
     * Email address of the customer.
     * If the backend gateway requires it, then you must send this value.
     */
    customer_email?: string;
    /**
     * Mobile number or fixed line number of the customer.
     * If the backend gateway requires it, then you must send this value.
     * We recommend passing only the 10 digit number without appending "+" or mobile country code.
     */
    customer_phone?: string;
    /**
     * Short description for the order.
     * We send this information to the backend gateways whenever there is a provision for this.
     */
    description?: string;
    /**
     * An identifier for the product. Fits well for impulse purchase usecases.
     */
    product_id?: string;
    /**
     * Specify your preferred gateway for this order.
     *
     * Complete mapping for “gateway_id” can be found here: https://developer.juspay.in/docs/dynamic-routing#enumerations-and-gateway-ids
     */
    gateway_id?: string;
    /**
     * A fully qualified URL such as http://shop.merchant.com/ to which the customer will be redirected after payment completion.
     * This URL shouldn’t contain any query parameters, # symbol or Ip address.
     * This URL takes higher precedence over the common return URL configured in your account settings.
     *
     * Note: Return URL must be a static URL, it should not return a 3XX status.
     */
    return_url?: string;
    /**
     * First name in the billing address
     */
    billing_address_first_name?: string;
    /**
     * Last name in the billing address
     */
    billing_address_last_name?: string;
    /**
     * Line1 in the billing address
     */
    billing_address_line1?: string;
    /**
     * Line 2 in the billing address
     */
    billing_address_line2?: string;
    /**
     * Line 3 in the billing address
     */
    billing_address_line3?: string;
    /**
     * Billing address city
     */
    billing_address_city?: string;
    /**
     * Billing address state
     */
    billing_address_state?: string;
    /**
     * Billing address country
     */
    billing_address_country?: string;
    /**
     * Billing address postal code or zip code
     */
    billing_address_postal_code?: string;
    /**
     * Billing address postal code or zip code
     */
    billing_address_phone?: string;
    /**
     * ISO Country code Default value: IND
     */
    billing_address_country_code_iso?: string;
    /**
     * First name in the shipping address
     */
    shipping_address_first_name?: string;
    /**
     * Last name in the shipping address
     */
    shipping_address_last_name?: string;
    /**
     * Line1 in the shipping address
     */
    shipping_address_line1?: string;
    /**
     * Line2 in the shipping address
     */
    shipping_address_line2?: string;
    /**
     * Line3 in the shipping address
     */
    shipping_address_line3?: string;
    /**
     * Shipping address city
     */
    shipping_address_city?: string;
    /**
     * Shipping address state
     */
    shipping_address_state?: string;
    /**
     * Shipping address country
     */
    shipping_address_country?: string;
    /**
     * Shipping address postal code or zip code
     */
    shipping_address_postal_code?: string;
    /**
     * Mobile or phone number in the shipping address
     */
    shipping_address_phone?: string;
    /**
     * ISO Country code Default value: IND
     */
    shipping_address_country_code_iso?: string;
    /**
     * User defined field which will be echoed back in the response from Juspay with a Max character limit of 255.
     * If there are any special characters that need to be passed in UDF values, please use UDF 6 to 10 for passing the same.
     * UDF 1 to 5 can be used to pass values which do not have any special characters.
     */
    udf1?: string;
    udf2?: string;
    udf3?: string;
    udf4?: string;
    udf5?: string;
    udf6?: string;
    udf7?: string;
    udf8?: string;
    udf9?: string;
    udf10?: string;
    /**
     * Required for product based offers and EMI.
     * The basket Amount (quantity* unitPrice) should be equal to the order amount.
     *
     * Sample: basket=[{"id":"491838009","description":"Test Product","quantity":1,"unitPrice":25123.25,"category":"Electronics","sku":"12345","productUrl":"https://www.google.com","sellerType":"VENDOR","customParams":{"name1":"value1","name2":"value2"}}]
     */
    basket?: string;
    /**
     * Client side authenticaion token required for Hyper SDK calls.
     */
    'options.get_client_auth_token'?: boolean;
    /**
     * The amount for which the EMI interest should not be calculated.
     */
    'metadata.subvention_amount'?: string;
    /**
     * Merchant can pass dynamic webhook URL in this field.
     * The webhook authentication would be same as the one configured on the dashboard.
     *
     * Ex: metadata.webhook_url= Check https://merchant.juspay/response
     */
    'metadata.webhook_url'?: string;
}
export interface UpdateOrderRequest extends RequestEntity {
    /**
     * Amount that the customer has to pay.
     * Will accept double values with upto two decimal places.
     * For example, 100.15 is valid input but 100.1532 is not valid.
     */
    amount?: number;
}
export interface RefundOrderRequest extends RequestEntity {
    /**
     * Request ID that uniquely identifies this request.
     * You cannot reuse the value for two different refund requests.
     * This is to avoid processing duplicate refund requests.
     * The length of the unique_request_id should be less than 21 characters
     */
    unique_request_id: string;
    /**
     * Send this as request parameter when using server SDK.
     * Order ID for which the refund has to be processed
     */
    order_id: string;
    /**
     * Amount that has to be refunded.
     * Amount has to be less than or equal to the amount of the order that is not yet refunded.
     * If this parameter is not passed, then the order is refunded entirely
     */
    amount: number;
}
export type OrderStatusRequest = RequestEntity;
export {};
