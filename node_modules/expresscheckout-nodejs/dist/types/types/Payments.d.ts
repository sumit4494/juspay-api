import { RequestEntity } from './Http.js';
export interface PaymentCreateRequest extends RequestEntity {
    /**
     * order_id pertaining to the order for which the payment is started.
     */
    order_id: string;
    /**
     * @example
     * CARD, NB, WALLET, UPI, CONSUMET_FINANCE, CASH, REWARD, MERCHANT_CONTAINER etc
     * For information not documented here, please refer to the doc shared with you.
     */
    payment_method_type: 'CARD' | 'NB' | 'WALLET' | 'UPI' | 'CONSUMER_FINANCE' | 'CASH' | 'REWARD' | 'MERCHANT_CONTAINER' | string;
    /**
     * The actual payment method that was selected by the user.
     *
     * examples for payment method
     *
     * @card This is usually inferred from the card number itself and we will take care of this if you are unable to provide this from your end.
     * @example VISA, MASTERCARD, MAESTRO, AMEX, RUPAY.
     * @link https://docs.juspay.in/api-reference/docs/express-checkout/credit--debit-card-transaction
     *
     *
     * @netbanking For NetBanking transactions
     * @example NB_AXIS, NB_BOI, NB_HDFC, NB_FED, NB_INDUS etc
     * @link https://docs.juspay.in/api-reference/docs/express-checkout/netbanking-payment
     *
     *
     * @wallet For WALLET transactions, it must be one of the below table.
     * @example MOBIKWIK, PAYTM, FREECHARGE etc
     * @link https://docs.juspay.in/api-reference/docs/express-checkout/wallet-payment
     *
     *
     * @walletDirectDebit For WALLET transactions, it must be one of the supported wallets from the table.
     * @example MOBIKWIK, PAYTM, FREECHARGE, LAZYPAY etc
     * @link https://docs.juspay.in/api-reference/docs/express-checkout/wallet-direct-debit
     *
     *
     * @consumerFinanceRequest The actual payment method that was selected by the user from the table above.
     * @example CAPITALFLOAT, EPAYLATER, GRABPAYPAYLATER etc
     * @link https://docs.juspay.in/api-reference/docs/express-checkout/consumer-finance-payment
     *
     * @UPI collect and intent
     * @example UPI
     * @link
     *  - Collect:- https://docs.juspay.in/api-reference/docs/express-checkout/upi-collect-payment
     *  - Intent:- https://docs.juspay.in/api-reference/docs/express-checkout/upi-intent-payment
     *
     * For information not documented here, please refer to the doc shared with you.
     */
    payment_method: string;
    /**
     * This is a boolean variable and accepts true/false. We recommend that you set this to true and use the redirection flow. If set to true, then the user is redirected to the return_url configured for the order. If set to false, then the user will be stopped at the response page from the gateway. Your client should be able to read the page/title to infer that the user has completed the transaction.
     */
    redirect_after_payment?: boolean;
    /**
     * If it is set to json, then the response will be HTTP 200 with a JSON formatted text. Otherwise, the response is HTTP 302 with the Location attribute having the destination URL.
     *
     * @value will only be 'json' for sdk
     */
    format?: string;
    /**
     * The key offers should be passed only when juspay offers are being used. The value for this key can set as the offerID which is received from /v1/offers/list api
     */
    offers?: string[];
    /**
     * Default is false. Set it to true if the user wishes to perform an EMI transaction on the given card.
     */
    is_emi?: boolean;
    /**
     * Represents the bank that issued the card. Value must be one of the entries mentioned under EMI Bank in the support matrix below.
     *
     * check [docs]:https://developer.juspay.in/reference/payments
     */
    emi_bank?: string;
    /**
     * The tenure of the EMI in number of months.
     */
    emi_tenure?: number;
    /**
     * THREE_DS/OTP/VISA_CHECKOUT
     */
    auth_type?: 'THREE_DS' | 'OTP' | 'VISA_CHECKOUT' | string;
    /**
     * The type of EMI ie STANDARD_EMI or NO_COST_EMI
     */
    emi_type?: string;
    /**
     * Card holder name. Should contain alphabetical characters only.
     */
    name_on_card?: string;
    /**
     * A valid credit/debit card number
     */
    card_number?: string;
    /**
     * Represent the expiry year of the card as YY (two digits only)
     */
    card_exp_year?: string;
    /**
     * Represent the expiry month of the card as MM (two digits only)
     */
    card_exp_month?: string;
    /**
     * CVV of the card. Usually three digits. Optional for all VISA saved cards, SODEXO saved cards, and saved cards of select issuing banks of MASTERCARD
     */
    card_security_code?: string;
    /**
     * The version of encryption
     * For eg:- 2021-01-21
     */
    card_encoding_version?: string;
    /**
     * The Key id provided by Juspay. Required for merchant specific RSA keys
     */
    client_enc_key_id?: string;
    /**
     * A valid card token obtained using /card/list API. If you send this parameter, then card_number, name_on_card, card_exp_year, card_exp_month fields are not required. If the token is generated using the /card/tokenize API, card_number, name_on_card, card_exp_year, card_exp_month and card_security_code fields are not required.
     */
    card_token?: string;
    /**
     * Juspay wallet token for linked wallets. This is available in the /customers/:id/wallets API or /wallets/:id API.
     */
    direct_wallet_token?: string;
    /**
     * VPA to which the collect request must be sent.
     */
    upi_vpa?: string;
    /**
     * Should be passed as true
     */
    sdk_params?: true;
    /**
     * The package name of the UPI app used.
     */
    upi_app?: string;
    /**
     * UPI_PAY for UPI INTENT
     * UPI_COLLECT for UPI collect
     */
    txn_type?: string;
}
